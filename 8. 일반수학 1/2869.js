const fs = require('fs');
const [a, b, v] = fs
  .readFileSync('./input.txt')
  .toString()
  .trim()
  .split(' ')
  .map(Number);

/* 
    a=낮에 올라가는 미터
    b=밤에 미끄러지는 미터
    v=목표 위치

    처음에 반복문으로 문제를 제출했을때는 시간초과가 났다.
    v의 값이 높다면, 연산 속도에 문제가 생긴다.

    따라서 다른 방식을 생각해야했다.
    그래서 v-a+1을 했더니 정답이 나오는가 싶더니
    정상에 도착했을때는 내려가지 않는 점을 고려하지 않아서 이 계산도 답이 아니었다.
*/

/* 
  올라가야 하는 높이가 1인 경우에는 무조건 1일 수 밖에 없다.
  (하루에 2미터씩 올라가며, 정상에 도착한 경우 미끄러지지 않기 떄문)

  따라서 1인 경우에는 1을 리턴, 
  그외 값은 계산을 해야하는데

  정상에 가기까지 걸리는 몇 번 올라가야하는 지는 v-a을 하면되고,
  정상에 오르지 않았을시 하루에 갈 수 있는 거리는 a-b이다.

  여기서 총 가야할 거리수를 하루에 간 거리로 나누면 몇번 가야하는지 값을 알 수 있다.
  문제는 나머지가 있을 수 있으므로 이를 올림 처리한다.  
  나머지가 있다는 것은 목표 지점보다 덜 갔다는 뜻이라 하루가 더 필요하게 된다.

  ex) 목표가 10이고, a-b가 3이라고 하면 10/3 = 3.33....이 되는데 이는 나누어도 가야할 거리가 남아있다는 것이다.
  올림 처리하여 하루를 더 올라가야 목표 거리에 도달할 수 있다.

  즉, Math.ceil((v - a) / (a - b))까지는 걸리는 날을 계산하는 것이다.
  그리고 +1을 하는 이유는 정상에 도착했을때는 더이상 미끄러지지 않기 때문에 하루를 추가한 것.
*/
const days = v === 1 ? 1 : Math.ceil((v - a) / (a - b)) + 1;
console.log(days);
